<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Library</OutputType>
    <Version>1.2.2</Version>
    <TargetFramework>net471</TargetFramework>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugType>pdbonly</DebugType>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="0Harmony">
      <HintPath>$(VALHEIM_INSTALL)\BepInEx\core\0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="assembly_utils">
      <HintPath>$(VALHEIM_INSTALL)\valheim_Data\Managed\assembly_utils.dll</HintPath>
    </Reference>
    <Reference Include="assembly_guiutils">
      <HintPath>$(VALHEIM_INSTALL)\valheim_Data\Managed\assembly_guiutils.dll</HintPath>
    </Reference>
    <Reference Include="assembly_valheim">
      <HintPath>$(VALHEIM_INSTALL)\valheim_Data\Managed\assembly_valheim.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>$(VALHEIM_INSTALL)\valheim_Data\Managed\UnityEngine.dll</HintPath>
    </Reference>


    <Reference Include="BepInEx">
      <HintPath>$(VALHEIM_INSTALL)\BepInEx\core\BepInEx.dll</HintPath>
    </Reference>
 
    
    <Reference Include="UnityEngine.AnimationModule">
      <HintPath>$(VALHEIM_INSTALL)\valheim_Data\Managed\UnityEngine.AnimationModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.AssetBundleModule">
      <HintPath>$(VALHEIM_INSTALL)\valheim_Data\Managed\UnityEngine.AssetBundleModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(VALHEIM_INSTALL)\valheim_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.PhysicsModule">
      <HintPath>$(VALHEIM_INSTALL)\valheim_Data\Managed\UnityEngine.PhysicsModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(VALHEIM_INSTALL)\valheim_Data\Managed\UnityEngine.UI.dll</HintPath>
    </Reference>
    <!--    <Reference Include="UniUnlit">-->
    <!--      <HintPath>$(UNIVRM_UNITY_LIBS)\UniUnlit.dll</HintPath>-->
    <!--    </Reference>-->
    <Reference Include="VRM">
      <HintPath>$(UNIVRM_UNITY_LIBS)\VRM.dll</HintPath>
    </Reference>
    <Reference Include="VRM10">
      <HintPath>$(UNIVRM_UNITY_LIBS)\VRM10.dll</HintPath>
    </Reference>
    <Reference Include="VrmLib">
      <HintPath>$(UNIVRM_UNITY_LIBS)\VrmLib.dll</HintPath>
    </Reference>
    <Reference Include="VRMShaders.GLTF.IO.Runtime">
      <HintPath>$(UNIVRM_UNITY_LIBS)\VRMShaders.GLTF.IO.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="VRMShaders.GLTF.UniUnlit.Runtime">
      <HintPath>$(UNIVRM_UNITY_LIBS)\VRMShaders.GLTF.UniUnlit.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="VRMShaders.VRM.IO.Runtime">
      <HintPath>$(UNIVRM_UNITY_LIBS)\VRMShaders.VRM.IO.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="VRMShaders.VRM10.Format.Runtime">
      <HintPath>$(UNIVRM_UNITY_LIBS)\VRMShaders.VRM10.Format.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="VRMShaders.VRM10.MToon10.Runtime">
      <HintPath>$(UNIVRM_UNITY_LIBS)\VRMShaders.VRM10.MToon10.Runtime.dll</HintPath>
    </Reference>

    <Reference Include="FastSpringBone">
      <HintPath>$(UNIVRM_UNITY_LIBS)\FastSpringBone.dll</HintPath>
    </Reference>
    <Reference Include="FastSpringBone10">
      <HintPath>$(UNIVRM_UNITY_LIBS)\FastSpringBone10.dll</HintPath>
    </Reference>
    <!--    <Reference Include="MeshUtility">-->
    <!--      <HintPath>$(UNIVRM_UNITY_LIBS)\MeshUtility.dll</HintPath>-->
    <!--    </Reference>-->
    <Reference Include="MToon">
      <HintPath>$(UNIVRM_UNITY_LIBS)\MToon.dll</HintPath>
    </Reference>
    <!--    <Reference Include="ShaderProperty.Runtime">-->
    <!--      <HintPath>$(UNIVRM_UNITY_LIBS)\ShaderProperty.Runtime.dll</HintPath>-->
    <!--    </Reference>-->
    <Reference Include="UniGLTF">
      <HintPath>$(UNIVRM_UNITY_LIBS)\UniGLTF.dll</HintPath>
    </Reference>
    <Reference Include="UniGLTF.Utils">
      <HintPath>$(UNIVRM_UNITY_LIBS)\UniGLTF.Utils.dll</HintPath>
    </Reference>
    <!--    <Reference Include="UniGLTF.Editor">-->
    <!--      <HintPath>$(UNIVRM_UNITY_LIBS)\UniGLTF.Editor.dll</HintPath>-->
    <!--    </Reference>-->
    <Reference Include="UniHumanoid">
      <HintPath>$(UNIVRM_UNITY_LIBS)\UniHumanoid.dll</HintPath>
    </Reference>


  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CloudinaryDotNet" Version="1.18.1" />
  </ItemGroup>


  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <!-- Set Paths -->
    <PropertyGroup>
      <BepInExPluginPath>$(VALHEIM_INSTALL)\BepInEx\plugins\</BepInExPluginPath>
      <ManagedPath>$(VALHEIM_INSTALL)\valheim_Data\Managed\</ManagedPath>
      <UniVrmLibsPath>$(UNIVRM_UNITY_LIBS)</UniVrmLibsPath>
      <Pdb2MdbPath>$(SolutionDir)pdb2mdb.exe</Pdb2MdbPath>
<!--      <UnstrippedCorlibPath>$(VALHEIM_INSTALL)\unstripped_corlib\</UnstrippedCorlibPath>-->
    </PropertyGroup>

    <PropertyGroup>
      <ReleasePath>$(SolutionDir)release\</ReleasePath>
      <ReleaseManagedPath>$(ReleasePath)valheim_Data\Managed\</ReleaseManagedPath>
      <ReleasePluginPath>$(ReleasePath)BepInEx\plugins\</ReleasePluginPath>
    </PropertyGroup>


    <!-- Delete old files from BepInExPluginPath -->
    <Exec Command="del &quot;$(BepInExPluginPath)$(TargetFileName)&quot;" />
    <Exec Command="del &quot;$(BepInExPluginPath)$(TargetName).pdb&quot;" />
    <Exec Command="del &quot;$(BepInExPluginPath)$(TargetFileName).mdb&quot;" />

    <!-- Copyable files -->
    <ItemGroup>
      <!-- UNI VRM -->
      <LibFiles Include="$(UniVrmLibsPath)\FastSpringBone.dll" />
      <LibFiles Include="$(UniVrmLibsPath)\FastSpringBone10.dll" />
      <LibFiles Include="$(UniVrmLibsPath)\MToon.dll" />
      <LibFiles Include="$(UniVrmLibsPath)\UniGLTF.dll" />
      <LibFiles Include="$(UniVrmLibsPath)\UniHumanoid.dll" />
      <LibFiles Include="$(UniVrmLibsPath)\VRM.dll" />
      <LibFiles Include="$(UniVrmLibsPath)\VRM10.dll" />
      <LibFiles Include="$(UniVrmLibsPath)\VrmLib.dll" />
      <LibFiles Include="$(UniVrmLibsPath)\UniGLTF.Utils.dll" />


      <LibFiles Include="$(UniVrmLibsPath)\VRMShaders.GLTF.IO.Runtime.dll" />
      <LibFiles Include="$(UniVrmLibsPath)\VRMShaders.GLTF.UniUnlit.Runtime.dll" />
      <LibFiles Include="$(UniVrmLibsPath)\VRMShaders.VRM.IO.Runtime.dll" />
      <LibFiles Include="$(UniVrmLibsPath)\VRMShaders.VRM10.Format.Runtime.dll" />
      <LibFiles Include="$(UniVrmLibsPath)\VRMShaders.VRM10.MToon10.Runtime.dll" />
      <!--      <LibFiles Include="$(LibsPath)\System.dll" />-->

      <!-- Unstripped_corlib  -->
<!--      <LibFiles Include="$(ManagedPath)\UnityEngine.dll" />-->
<!--      <LibFiles Include="$(ManagedPath)\UnityEngine.CoreModule.dll" />-->
<!--      <LibFiles Include="$(ManagedPath)\UnityEngine.AnimationModule.dll" />-->
<!--      <LibFiles Include="$(ManagedPath)\UnityEngine.AssetBundleModule.dll" />-->
<!--      <LibFiles Include="$(ManagedPath)\UnityEngine.PhysicsModule.dll" />-->
<!--      <LibFiles Include="$(ManagedPath)\UnityEngine.UI.dll" />-->

    </ItemGroup>


    <!-- COPY FILES TO LOCAL VALHIEM -->
    <Copy SourceFiles="@(LibFiles)" DestinationFolder="$(ManagedPath)" />
    <Exec Command="copy &quot;$(SolutionDir)Assets\ValheimVRM.shaders&quot; &quot;$(BepInExPluginPath)UniVrm.shaders&quot;" />


    <!-- DEBUG BUILD STUFF -->
    <Exec Condition=" '$(Configuration)' == 'Debug' " Command="&quot;$(Pdb2MdbPath)&quot; &quot;$(TargetPath)&quot;" />
    <Exec Condition=" '$(Configuration)' == 'Debug' " Command="copy &quot;$(TargetDir)$(TargetFileName)&quot; &quot;$(BepInExPluginPath)$(TargetFileName)&quot;" />
    <Exec Condition=" '$(Configuration)' == 'Debug' " Command="copy &quot;$(TargetDir)$(TargetName).pdb&quot; &quot;$(BepInExPluginPath)$(TargetName).pdb&quot;" />
    <Exec Condition=" '$(Configuration)' == 'Debug' " Command="copy &quot;$(TargetDir)$(TargetFileName).mdb&quot; &quot;$(BepInExPluginPath)$(TargetFileName).mdb&quot;" />




    <!-- RELEASE BUILD STUFF -->

    <Exec Condition=" '$(Configuration)' == 'Release' " Command="if exist &quot;$(ReleasePath)&quot; rd /s /q &quot;$(ReleasePath)&quot;" />
    
    <MakeDir Directories="$(ReleasePath)" Condition=" '$(Configuration)' == 'Release' " />
    <MakeDir Directories="$(ReleaseManagedPath)" Condition=" '$(Configuration)' == 'Release' " />
    <MakeDir Directories="$(ReleasePluginPath)" Condition=" '$(Configuration)' == 'Release' " />


    <!-- Copy ValheimVRM.dll to correct places -->
    <Exec Condition=" '$(Configuration)' == 'Release' " Command="copy &quot;$(TargetDir)$(TargetFileName)&quot; &quot;$(BepInExPluginPath)$(TargetFileName)&quot;" />
    <Exec Condition=" '$(Configuration)' == 'Release' " Command="copy &quot;$(TargetDir)$(TargetFileName)&quot; &quot;$(ReleasePluginPath)$(TargetFileName)&quot;" />


    <Exec Condition=" '$(Configuration)' == 'Release' " Command="copy &quot;$(SolutionDir)Assets\ValheimVRM.shaders&quot; &quot;$(ReleasePluginPath)ValheimVRM.shaders&quot;" />


    <Copy Condition=" '$(Configuration)' == 'Release' " SourceFiles="@(LibFiles)" DestinationFolder="$(ReleaseManagedPath)" />

    <!--  Copy Other Project files  -->
    <Exec Condition=" '$(Configuration)' == 'Release' " Command="copy &quot;$(SolutionDir)settings____Default.txt&quot; &quot;$(ReleasePath)settings___Default.txt&quot;" />
    <Exec Condition=" '$(Configuration)' == 'Release' " Command="copy &quot;$(SolutionDir)settings_Example.txt&quot; &quot;$(ReleasePath)settings_Example.txt&quot;" />
    <Exec Condition=" '$(Configuration)' == 'Release' " Command="copy &quot;$(SolutionDir)README.md&quot; &quot;$(ReleasePath)README.md&quot;" />



    <!-- Zip for release -->
    <Exec Condition=" '$(Configuration)' == 'Release' " Command="powershell -command &quot;Compress-Archive -Path '$(ReleasePath)' -DestinationPath '$(SolutionDir)ValheimVRM-$(Version).zip'&quot; -Force" />


    
  </Target>




</Project>
